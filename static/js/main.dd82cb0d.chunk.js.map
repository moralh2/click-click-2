{"version":3,"sources":["components/Wrapper/index.js","components/Card/index.js","components/Score/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Card","name","onClick","handleClicky","id","alt","src","image","popover","Popover_default","title","role","aria-label","Instrucciones","OverlayTrigger_default","trigger","placement","overlay","type","class","Score","score","Score_Instrucciones","topScore","App","state","clickables","shuffleArr","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","compare","b","allImages","_this","sort","filter","clicky","clicked","parseInt","newScore","newTopScore","finalImages","setState","JSON","parse","stringify","imagesImport","this","_this2","components_Wrapper","components_Score","map","components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd82cb0d.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./style.css\"\n\nfunction Wrapper(props) {\n  return <div className=\"container wrapper\">{props.children}</div>\n}\n\nexport default Wrapper","import React from \"react\"\nimport \"./style.css\"\n\nfunction Card(props) {\n    return (\n        <div className={\"card \" + props.name} onClick={() => props.handleClicky(props.id)}>\n            <div className=\"img-container\">\n                <img alt={props.name} src={props.image} />\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React from \"react\"\nimport \"./style.css\"\nimport Popover from 'react-bootstrap/Popover'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n\nconst popover = (\n    <Popover id=\"popover-basic\" title=\"Las Intrucciones\">\n        The instructions are simple: You have to click each of the images once; once you've clicked all 12, you've won \n        <span role=\"img\" aria-label=\"emoji\"> ðŸ’ª</span> That said, if you click the same image twice, you have to start all over! \n        Oh, and the images will shuffle after every click \n        <span role=\"img\" aria-label=\"emoji\"> ðŸ˜ˆ</span> Best of luck! <span role=\"img\" aria-label=\"emoji\"> ðŸ˜˜</span>\n    </Popover>\n)\nconst Instrucciones = () => (\n    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n        <button type=\"button\" className='btn btn-title align-middle'>\n            (<i class=\"fas fa-mouse-pointer\"></i>\n            <i class=\"fas fa-mouse-pointer\"></i>\n            <i class=\"fas fa-times fa-fw\"></i>12\n            <i class=\"fas fa-images fa-fw\"></i>\n            <i class=\"fas fa-arrows-alt-h fa-fw\"></i>\n            (<i class=\"fas fa-image fa-fw\"></i>\n            <i class=\"fas fa-times fa-fw\"></i>1))\n            <i class=\"fas fa-equals fa-fw\"></i>\n            <i class=\"fas fa-trophy fa-fw\"></i>\n        </button>\n    </OverlayTrigger>\n)\n\nfunction Score(props) {\n    return (\n        <div className=\"score-wrapper btn-group text-center\" role=\"group\">\n            <button type=\"button\" className={\"btn \" + (props.score === 12 ? 'btn-success' : 'btn-score')}>\n                Score <span className=\"badge badge-light\">{props.score}</span>\n            </button>\n            <Instrucciones />\n            <button type=\"button\" className={\"btn \" + (props.topScore === 12 ? 'btn-success' : 'btn-topScore')}>\n                Top Score <span className=\"badge badge-light\">{props.topScore}</span>\n            </button>\n        </div>\n    )\n}\n\nexport default Score","import React, { Component } from 'react'\nimport Wrapper from \"./components/Wrapper\"\nimport Card from \"./components/Card\"\nimport Score from \"./components/Score\"\nimport imagesImport from \"./images.json\"\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    topScore: 0,\n    clickables: []\n  }\n\n  componentDidMount() {\n    this.setState({\n      clickables: JSON.parse(JSON.stringify(imagesImport))\n    })\n  }\n\n  shuffleArr = array => {\n    let currentIndex = array.length, temporaryValue, randomIndex\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n    return array\n  }\n\n  compare = (a, b) => {\n    if (a.id < b.id) { return -1 }\n    if (a.id > b.id) { return 1  }\n    return 0\n  }\n\n  handleClicky = id => {\n    let allImages = this.state.clickables.sort(this.compare)\n    let clickedImage = allImages.filter(clicky => clicky.id === id)\n    // --------- if the image hasn't been clicked\n    if (clickedImage[0].clicked === false) {\n      // set clicked to true\n      allImages[parseInt(id) - 1].clicked = true\n      // increase score\n      let newScore = this.state.score + 1\n      // compare to top score\n      let newTopScore = this.state.topScore\n      if (this.state.topScore < newScore) { newTopScore++ }\n      // shuffle the array\n      let finalImages = this.shuffleArr(allImages)\n      // update game state\n      this.setState({\n        score: newScore,\n        topScore: newTopScore,\n        clickables: finalImages\n      })\n    }\n    // --------- if the image HAS been clicked on\n    else {\n      // reset score to 0, and reset array\n      this.setState({\n        score: 0,\n        clickables: this.shuffleArr(JSON.parse(JSON.stringify(imagesImport)))  \n      })\n    }\n  }\n\n  render() {\n    \n    return (\n      <Wrapper>\n        <Score \n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        {this.state.clickables.map(clicky => (\n            <Card\n              id={clicky.id}\n              key={clicky.id}\n              name={clicky.name}\n              image={clicky.image}\n              clicked={clicky.clicked}\n              handleClicky={this.handleClicky}\n            />\n          ))}\n      </Wrapper>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}